@using EntityLayer.Concrete
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<EntityLayer.Concrete.Category>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}
<a href="/Admin/Category/CategoryAdd" class="btn btn-success">Add</a>
<br />
<table class="table table-bordered">
    <tr>
        <th>Category Id</th>
        <th>Category Name</th>
        <th>Category Status</th>
        <th>Category Update</th>
        <th>Caategory Delete</th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>@item.CategoryId</td>
            <td>@item.CategoryName</td>
            <td>@item.CategoryStatus</td>
            <td><a href="/Admin/Category/CategoryUpdate/@item.CategoryId" asp-for="" class="btn btn-primary">Update</a></td>
            <td><a href="/Admin/Category/CategoryDelete/@item.CategoryId" id="DeleteBtn" onclick="return confirm('Are you want Delete ?')" class="btn btn-danger">Delete</a></td>
        </tr>
    }
</table>    
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))
